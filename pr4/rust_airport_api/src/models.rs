// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]


use chrono::NaiveDateTime;
use diesel::{Identifiable, Queryable, Selectable};
use bigdecimal::BigDecimal;
use serde::{Deserialize, Serialize};
use crate::schema::*;

#[derive(Queryable, Debug, Identifiable, Selectable, Serialize, Deserialize)]
#[diesel(primary_key(airport_code), table_name = airport)]
pub struct Airport {
    pub airport_code: String,
    pub name: String,
    pub continent: String,
    pub type_: String,
    pub lat: f32,
    pub lon: f32,
    pub site: Option<String>,
    pub wiki: Option<String>,
    pub iso_region: String,
    pub gps_code: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(client_id), table_name = client)]
pub struct Client {
    pub client_id: i32,
    pub login: String,
    pub password: String,
    pub profile_id: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(iso_country), table_name = country)]
pub struct Country {
    pub iso_country: String,
    pub continent: String,
    pub wikipedia_link: String,
    pub name: String,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(deny_id, request_id), table_name = deny)]
pub struct Deny {
    pub deny_id: i32,
    pub request_id: i32,
    pub reason: String,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(employee_id), table_name = employee)]
pub struct Employee {
    pub employee_id: i32,
    pub login: String,
    pub post_id: i32,
    pub password: String,
    pub profile_id: i32,
    pub salary: BigDecimal,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(feature_id), table_name = feature)]
pub struct Feature {
    pub feature_id: i32,
    pub name: String,
    pub icon: String,
    pub desctiption: String,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(flight_id), table_name = flight)]
pub struct Flight {
    pub flight_id: i32,
    pub plane_id: i32,
    pub route_id: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(plane_id), table_name = plane)]
pub struct Plane {
    pub plane_id: i32,
    pub model: String,
    pub description: String,
    pub seats_count: i32,
    pub luggage_max: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(plane_feature_id), table_name = plane_feature)]
pub struct PlaneFeature {
    pub plane_feature_id: i32,
    pub plane_id: i32,
    pub feature_id: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(post_id), table_name = post)]
pub struct Post {
    pub post_id: i32,
    pub name: String,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(profile_id), table_name = profile)]
pub struct Profile {
    pub profile_id: i32,
    pub email: String,
    pub passport: String,
    pub surname: String,
    pub firstname: String,
    pub middlename: String,
    pub isdeleted: bool,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(receipt_id), table_name = receipt)]
pub struct Receipt {
    pub receipt_id: i32,
    pub created_at: NaiveDateTime,
    pub payment_method: String,
    pub paymentsumm: i32,
    pub ticket_id: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(iso_region), table_name = region)]
pub struct Region {
    pub iso_region: String,
    pub continent: String,
    pub iso_country: String,
    pub name: String,
    pub wikipedia_link: String,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(request_id), table_name = request)]
pub struct Request {
    pub request_id: i32,
    pub created_at: NaiveDateTime,
    pub isdeny: bool,
    pub client_id: i32,
    pub route_id: i32,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(route_id), table_name = route)]
pub struct Route {
    pub route_id: i32,
    pub code_from: String,
    pub code_to: String,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(ticket_id), table_name = ticket)]
pub struct Ticket {
    pub ticket_id: i32,
    pub buy_at: NaiveDateTime,
    pub isscanned: bool,
    pub scanned_at: Option<NaiveDateTime>,
    pub paysumm: i32,
    pub request_id: i32,
    pub employee_id: Option<i32>,
    pub flight_id: i32,
    pub place_number: i32,
}

